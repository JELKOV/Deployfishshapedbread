-- fishshapedbread.bb_product_category definition
CREATE TABLE `BB_PRODUCT_CATEGORY` (
  `PRODUCT_CATEGORY_NUM` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_CATEGORY_NAME` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`PRODUCT_CATEGORY_NUM`),
  UNIQUE KEY `PRODUCT_CATEGORY_NAME` (`PRODUCT_CATEGORY_NAME`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_product definition
CREATE TABLE `BB_PRODUCT` (
  `PRODUCT_NUM` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_NAME` VARCHAR(100) NOT NULL,
  `PRODUCT_PRICE` INT NOT NULL,
  `PRODUCT_PROFILE_WAY` VARCHAR(500) NOT NULL,
  `PRODUCT_CATEGORY_NUM` INT DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_NUM`),
  KEY `PRODUCT_CATEGORY_NUM` (`PRODUCT_CATEGORY_NUM`),
  CONSTRAINT `BB_PRODUCT_IBFK_2` FOREIGN KEY (`PRODUCT_CATEGORY_NUM`) REFERENCES `BB_PRODUCT_CATEGORY` (`PRODUCT_CATEGORY_NUM`) ON DELETE SET NULL
) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_member definition
CREATE TABLE `BB_MEMBER` (
  `MEMBER_NUM` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_EMAIL` VARCHAR(200) NOT NULL,
  `MEMBER_PASSWORD` VARCHAR(100) NOT NULL,
  `MEMBER_NAME` VARCHAR(30) NOT NULL,
  `MEMBER_NICKNAME` VARCHAR(50) NOT NULL,
  `MEMBER_PHONE` VARCHAR(20) DEFAULT NULL,
  `MEMBER_PROFILE_WAY` VARCHAR(500) DEFAULT NULL,
  `MEMBER_ROLE` VARCHAR(30) DEFAULT 'USER',
  `MEMBER_HIREDAY` DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`MEMBER_NUM`),
  CONSTRAINT `BB_MEMBER_CHK_1` CHECK ((`MEMBER_ROLE` IN ('USER','ADMIN','ONER')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_store definition
CREATE TABLE `BB_STORE` (
  `STORE_NUM` INT NOT NULL AUTO_INCREMENT,
  `STORE_NAME` VARCHAR(100) NOT NULL,
  `STORE_ADDRESS` VARCHAR(500) NOT NULL,
  `STORE_ADDRESS_DETAIL` VARCHAR(100) NOT NULL,
  `STORE_CONTACT` VARCHAR(20) DEFAULT NULL,
  `STORE_CLOSED` CHAR(1) DEFAULT 'N',
  `STORE_SECRET` CHAR(1) DEFAULT 'N',
  PRIMARY KEY (`STORE_NUM`),
  CONSTRAINT `BB_STORE_CHK_1` CHECK ((`STORE_CLOSED` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_CHK_2` CHECK ((`STORE_SECRET` IN ('Y','N')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_declare definition
CREATE TABLE `BB_DECLARE` (
  `DECLARE_NUM` INT NOT NULL AUTO_INCREMENT,
  `STORE_NUM` INT DEFAULT NULL,
  `DECLARE_CONTENT` VARCHAR(1000) DEFAULT NULL,
  PRIMARY KEY (`DECLARE_NUM`),
  KEY `STORE_NUM` (`STORE_NUM`),
  CONSTRAINT `BB_DECLARE_IBFK_2` FOREIGN KEY (`STORE_NUM`) REFERENCES `BB_STORE` (`STORE_NUM`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_payment definition
CREATE TABLE `BB_PAYMENT` (
    `PAYMENT_NUM` INT AUTO_INCREMENT PRIMARY KEY,
    `MEMBER_NUM` INT NOT NULL,
    `PAYMENT_AMOUNT` INT NOT NULL,
    `PAYMENT_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `PAYMENT_NAME` VARCHAR(100) NOT NULL,
    `IMP_UUID` VARCHAR(100) UNIQUE,
    `ADMIN_CHECKED` CHAR(1) DEFAULT 'N' CHECK (`ADMIN_CHECKED` IN ('Y','N')),
    FOREIGN KEY (`MEMBER_NUM`) REFERENCES `BB_MEMBER` (`MEMBER_NUM`) ON DELETE CASCADE
);

-- fishshapedbread.bb_point definition
CREATE TABLE `BB_POINT` (
  `POINT_NUM` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_NUM` INT DEFAULT NULL,
  `POINT_PLUS` INT DEFAULT NULL,
  `POINT_MINUS` INT DEFAULT NULL,
  `POINT_CONTENT` VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (`POINT_NUM`),
  KEY `MEMBER_NUM` (`MEMBER_NUM`),
  CONSTRAINT `BB_POINT_IBFK_1` FOREIGN KEY (`MEMBER_NUM`) REFERENCES `BB_MEMBER` (`MEMBER_NUM`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_store_menu definition
CREATE TABLE `BB_STORE_MENU` (
  `STORE_MENU_NUM` INT NOT NULL AUTO_INCREMENT,
  `STORE_NUM` INT NOT NULL,
  `STORE_MENU_NORMAL` VARCHAR(1) DEFAULT 'N',
  `STORE_MENU_VEG` CHAR(1) DEFAULT 'N',
  `STORE_MENU_MINI` CHAR(1) DEFAULT 'N',
  `STORE_MENU_POTATO` CHAR(1) DEFAULT 'N',
  `STORE_MENU_ICE` CHAR(1) DEFAULT 'N',
  `STORE_MENU_CHEESE` CHAR(1) DEFAULT 'N',
  `STORE_MENU_PASTRY` CHAR(1) DEFAULT 'N',
  `STORE_MENU_OTHER` CHAR(1) DEFAULT 'N',
  PRIMARY KEY (`STORE_MENU_NUM`),
  UNIQUE KEY `STORE_NUM` (`STORE_NUM`),
  CONSTRAINT `BB_STORE_MENU_IBFK_1` FOREIGN KEY (`STORE_NUM`) REFERENCES `BB_STORE` (`STORE_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_STORE_MENU_CHK_2` CHECK ((`STORE_MENU_VEG` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_MENU_CHK_3` CHECK ((`STORE_MENU_MINI` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_MENU_CHK_4` CHECK ((`STORE_MENU_POTATO` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_MENU_CHK_5` CHECK ((`STORE_MENU_ICE` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_MENU_CHK_6` CHECK ((`STORE_MENU_CHEESE` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_MENU_CHK_7` CHECK ((`STORE_MENU_PASTRY` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_MENU_CHK_8` CHECK ((`STORE_MENU_OTHER` IN ('Y','N'))),
  CONSTRAINT `CHECK_STORE_MENU_NORMAL` CHECK ((`STORE_MENU_NORMAL` IN ('Y','N')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_store_payment definition
CREATE TABLE `BB_STORE_PAYMENT` (
  `STORE_PAYMENT_NUM` INT NOT NULL AUTO_INCREMENT,
  `STORE_NUM` INT NOT NULL,
  `STORE_PAYMENT_CASHMONEY` CHAR(1) DEFAULT 'N',
  `STORE_PAYMENT_CARD` CHAR(1) DEFAULT 'N',
  `STORE_PAYMENT_ACCOUNT` CHAR(1) DEFAULT 'N',
  PRIMARY KEY (`STORE_PAYMENT_NUM`),
  UNIQUE KEY `STORE_NUM` (`STORE_NUM`),
  CONSTRAINT `BB_STORE_PAYMENT_IBFK_1` FOREIGN KEY (`STORE_NUM`) REFERENCES `BB_STORE` (`STORE_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_STORE_PAYMENT_CHK_1` CHECK ((`STORE_PAYMENT_CASHMONEY` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_PAYMENT_CHK_2` CHECK ((`STORE_PAYMENT_CARD` IN ('Y','N'))),
  CONSTRAINT `BB_STORE_PAYMENT_CHK_3` CHECK ((`STORE_PAYMENT_ACCOUNT` IN ('Y','N')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_store_work definition
CREATE TABLE `BB_STORE_WORK` (
  `WORK_NUM` INT NOT NULL AUTO_INCREMENT,
  `STORE_NUM` INT NOT NULL,
  `STORE_WORK_WEEK` CHAR(3) NOT NULL,
  `STORE_WORK_OPEN` DATETIME NOT NULL,
  `STORE_WORK_CLOSE` DATETIME NOT NULL,
  PRIMARY KEY (`WORK_NUM`),
  CONSTRAINT `BB_STORE_WORK_IBFK_1` FOREIGN KEY (`STORE_NUM`) REFERENCES `BB_STORE` (`STORE_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_STORE_WORK_CHK_1` CHECK ((`STORE_WORK_WEEK` IN ('MON','TUE','WED','THU','FRI','SAT','SUN')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_board_category definition
CREATE TABLE `BB_BOARD_CATEGORY` (
  `BOARD_CATEGORY_NUM` INT NOT NULL AUTO_INCREMENT,
  `BOARD_CATEGORY_NAME` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`BOARD_CATEGORY_NUM`),
  UNIQUE KEY `BOARD_CATEGORY_NAME` (`BOARD_CATEGORY_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_board definition
CREATE TABLE `BB_BOARD` (
  `BOARD_NUM` INT NOT NULL AUTO_INCREMENT,
  `BOARD_TITLE` VARCHAR(500) NOT NULL,
  `BOARD_CONTENT` VARCHAR(1000) DEFAULT NULL,
  `BOARD_FOLDER` VARCHAR(1000) DEFAULT NULL,
  `MEMBER_NUM` INT DEFAULT NULL,
  `BOARD_WRITE_DAY` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `BOARD_OPEN` CHAR(1) DEFAULT 'N',
  `BOARD_CATEGORY_NUM` INT DEFAULT NULL,
  `STORE_NUM` INT DEFAULT NULL,
  `PRODUCT_NUM` INT DEFAULT NULL,
  `BOARD_DELETE` CHAR(1) DEFAULT 'N',
  PRIMARY KEY (`BOARD_NUM`),
  KEY `MEMBER_NUM` (`MEMBER_NUM`),
  KEY `BOARD_CATEGORY_NUM` (`BOARD_CATEGORY_NUM`),
  KEY `STORE_NUM` (`STORE_NUM`),
  KEY `BB_BOARD_IBFK_4` (`PRODUCT_NUM`),
  CONSTRAINT `BB_BOARD_IBFK_1` FOREIGN KEY (`MEMBER_NUM`) REFERENCES `BB_MEMBER` (`MEMBER_NUM`) ON DELETE SET NULL,
  CONSTRAINT `BB_BOARD_IBFK_2` FOREIGN KEY (`BOARD_CATEGORY_NUM`) REFERENCES `BB_BOARD_CATEGORY` (`BOARD_CATEGORY_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_BOARD_IBFK_3` FOREIGN KEY (`STORE_NUM`) REFERENCES `BB_STORE` (`STORE_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_BOARD_IBFK_4` FOREIGN KEY (`PRODUCT_NUM`) REFERENCES `BB_PRODUCT` (`PRODUCT_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_BOARD_CHK_1` CHECK ((`BOARD_OPEN` IN ('Y','N'))),
  CONSTRAINT `BB_BOARD_CHK_2` CHECK ((`BOARD_DELETE` IN ('Y','N')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_like definition
CREATE TABLE `BB_LIKE` (
  `LIKE_NUM` INT NOT NULL AUTO_INCREMENT,
  `BOARD_NUM` INT NOT NULL,
  `MEMBER_NUM` INT DEFAULT NULL,
  PRIMARY KEY (`LIKE_NUM`),
  KEY `BOARD_NUM` (`BOARD_NUM`),
  KEY `MEMBER_NUM` (`MEMBER_NUM`),
  CONSTRAINT `BB_LIKE_IBFK_1` FOREIGN KEY (`BOARD_NUM`) REFERENCES `BB_BOARD` (`BOARD_NUM`) ON DELETE CASCADE,
  CONSTRAINT `BB_LIKE_IBFK_2` FOREIGN KEY (`MEMBER_NUM`) REFERENCES `BB_MEMBER` (`MEMBER_NUM`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- 주문 정보
CREATE TABLE `BB_ORDER` (
    `ORDER_NUM` INT AUTO_INCREMENT PRIMARY KEY,
    `MEMBER_NUM` INT NOT NULL,
    `ADMIN_CHECKED` CHAR(1) DEFAULT 'N',
    `ORDER_DATE` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `ORDER_ADDRESS` VARCHAR(100),
    FOREIGN KEY (`MEMBER_NUM`) REFERENCES `BB_MEMBER` (`MEMBER_NUM`) ON DELETE CASCADE,
    CHECK (`ADMIN_CHECKED` IN ('Y','N','C'))
);

-- 주문 상품 정보
CREATE TABLE `BB_ORDER_DETAIL` (
    `ORDER_DETAIL_NUM` INT AUTO_INCREMENT PRIMARY KEY,
    `PRODUCT_NUM` INT,
    `ORDER_QUANTITY` INT,
    `ORDER_NUM` INT,
    FOREIGN KEY (`ORDER_NUM`) REFERENCES `BB_ORDER` (`ORDER_NUM`) ON DELETE CASCADE,
    FOREIGN KEY (`PRODUCT_NUM`) REFERENCES `BB_PRODUCT` (`PRODUCT_NUM`) ON DELETE SET NULL,
    UNIQUE (`ORDER_NUM`, `PRODUCT_NUM`)
);

-- fishshapedbread.bb_reply definition
CREATE TABLE `BB_REPLY` (
  `REPLY_NUM` INT NOT NULL AUTO_INCREMENT,
  `REPLY_CONTENT` VARCHAR(500) NOT NULL,
  `MEMBER_NUM` INT DEFAULT NULL,
  `REPLY_WRITE_DAY` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `BOARD_NUM` INT DEFAULT NULL,
  PRIMARY KEY (`REPLY_NUM`),
  KEY `MEMBER_NUM` (`MEMBER_NUM`),
  KEY `BOARD_NUM` (`BOARD_NUM`),
  CONSTRAINT `BB_REPLY_IBFK_1` FOREIGN KEY (`MEMBER_NUM`) REFERENCES `BB_MEMBER` (`MEMBER_NUM`) ON DELETE SET NULL,
  CONSTRAINT `BB_REPLY_IBFK_2` FOREIGN KEY (`BOARD_NUM`) REFERENCES `BB_BOARD` (`BOARD_NUM`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- fishshapedbread.bb_view_board_join source
CREATE OR REPLACE
VIEW `BB_VIEW_BOARD_JOIN` AS
SELECT
    `BB`.`BOARD_NUM` AS `BOARD_NUM`,
    `BB`.`BOARD_TITLE` AS `BOARD_TITLE`,
    `BB`.`BOARD_CONTENT` AS `BOARD_CONTENT`,
    `BB`.`BOARD_WRITE_DAY` AS `BOARD_WRITE_DAY`,
    `BB`.`BOARD_OPEN` AS `BOARD_OPEN`,
    `BB`.`BOARD_DELETE` AS `BOARD_DELETE`,
    `BB`.`BOARD_FOLDER` AS `BOARD_FOLDER`,
    `BM`.`MEMBER_NUM` AS `MEMBER_NUM`,
    `BM`.`MEMBER_NICKNAME` AS `MEMBER_NICKNAME`,
    `BM`.`MEMBER_PROFILE_WAY` AS `MEMBER_PROFILE_WAY`,
    IFNULL(`BL2`.`LIKE_CNT`, 0) AS `LIKE_CNT`,
    `BBC`.`BOARD_CATEGORY_NUM` AS `BOARD_CATEGORY_NUM`,
    `BBC`.`BOARD_CATEGORY_NAME` AS `BOARD_CATEGORY_NAME`,
    (SELECT IFNULL(COUNT(*), 0) FROM `BB_REPLY` WHERE `BOARD_NUM` = `BB`.`BOARD_NUM`) AS `REPLY_CNT`
FROM
    (((`BB_BOARD` `BB`
    LEFT JOIN `BB_MEMBER` `BM` ON
    (`BB`.`MEMBER_NUM` = `BM`.`MEMBER_NUM`))
    LEFT JOIN (
        SELECT
            `BB_LIKE`.`BOARD_NUM` AS `BOARD_NUM`,
            COUNT(0) AS `LIKE_CNT`
        FROM
            `BB_LIKE`
        GROUP BY
            `BB_LIKE`.`BOARD_NUM`) `BL2` ON
    (`BB`.`BOARD_NUM` = `BL2`.`BOARD_NUM`))
    LEFT JOIN `BB_BOARD_CATEGORY` `BBC` ON
    (`BB`.`BOARD_CATEGORY_NUM` = `BBC`.`BOARD_CATEGORY_NUM`));

-- fishshapedbread.bb_view_product_join source
CREATE OR REPLACE
VIEW `BB_VIEW_PRODUCT_JOIN` AS
SELECT
    `BP`.`PRODUCT_NUM` AS `PRODUCT_NUM`,
    `BP`.`PRODUCT_NAME` AS `PRODUCT_NAME`,
    `BP`.`PRODUCT_PRICE` AS `PRODUCT_PRICE`,
    `BP`.`PRODUCT_PROFILE_WAY` AS `PRODUCT_PROFILE_WAY`,
    `BB`.`BOARD_NUM` AS `BOARD_NUM`,
    `BP`.`PRODUCT_CATEGORY_NUM` AS `PRODUCT_CATEGORY_NUM`,
    `BPC`.`PRODUCT_CATEGORY_NAME` AS `PRODUCT_CATEGORY_NAME`,
    `BB`.`BOARD_TITLE` AS `BOARD_TITLE`,
    `BB`.`BOARD_CONTENT` AS `BOARD_CONTENT`
FROM
    ((`BB_PRODUCT` `BP`
    JOIN `BB_PRODUCT_CATEGORY` `BPC` ON
    (`BP`.`PRODUCT_CATEGORY_NUM` = `BPC`.`PRODUCT_CATEGORY_NUM`))
    LEFT JOIN `BB_BOARD` `BB` ON
    (`BP`.`PRODUCT_NUM` = `BB`.`PRODUCT_NUM`));

-- fishshapedbread.bb_view_store_join source
CREATE OR REPLACE VIEW `BB_VIEW_STORE_JOIN` AS
SELECT
    `S`.`STORE_NUM`,
    `S`.`STORE_NAME`,
    `S`.`STORE_ADDRESS`,
    `S`.`STORE_ADDRESS_DETAIL`,
    `S`.`STORE_CONTACT`,
    `S`.`STORE_CLOSED`,
    `S`.`STORE_SECRET`,
    `SM`.`STORE_MENU_NORMAL`,
    `SM`.`STORE_MENU_VEG`,
    `SM`.`STORE_MENU_MINI`,
    `SM`.`STORE_MENU_POTATO`,
    `SM`.`STORE_MENU_ICE`,
    `SM`.`STORE_MENU_CHEESE`,
    `SM`.`STORE_MENU_PASTRY`,
    `SM`.`STORE_MENU_OTHER`,
    `SP`.`STORE_PAYMENT_CASHMONEY`,
    `SP`.`STORE_PAYMENT_CARD`,
    `SP`.`STORE_PAYMENT_ACCOUNT`,
    CASE
        WHEN EXISTS (
            SELECT 1
            FROM `BB_DECLARE`
            WHERE `BB_DECLARE`.`STORE_NUM` = `S`.`STORE_NUM`
        ) THEN 'Y'
        ELSE 'N'
    END AS `STORE_DECLARED`
FROM `BB_STORE` `S`
    LEFT JOIN `BB_STORE_MENU` `SM` ON `S`.`STORE_NUM` = `SM`.`STORE_NUM`
    LEFT JOIN `BB_STORE_PAYMENT` `SP` ON `S`.`STORE_NUM` = `SP`.`STORE_NUM`;

CREATE OR REPLACE VIEW `BB_VIEW_SEARCHSTOREDATA_JOIN` AS
SELECT `S`.`STORE_NUM`, `S`.`STORE_NAME`, `S`.`STORE_ADDRESS`, `S`.`STORE_ADDRESS_DETAIL`,
       `S`.`STORE_CONTACT`, `S`.`STORE_CLOSED`, `S`.`STORE_SECRET`,
       `SM`.`STORE_MENU_NORMAL`, `SM`.`STORE_MENU_VEG`, `SM`.`STORE_MENU_MINI`,
       `SM`.`STORE_MENU_POTATO`, `SM`.`STORE_MENU_ICE`, `SM`.`STORE_MENU_CHEESE`,
       `SM`.`STORE_MENU_PASTRY`, `SM`.`STORE_MENU_OTHER`,
       `SP`.`STORE_PAYMENT_CASHMONEY`, `SP`.`STORE_PAYMENT_CARD`, `SP`.`STORE_PAYMENT_ACCOUNT`
FROM `BB_STORE` `S`
    LEFT JOIN `BB_STORE_MENU` `SM` ON `S`.`STORE_NUM` = `SM`.`STORE_NUM`
    LEFT JOIN `BB_STORE_PAYMENT` `SP` ON `S`.`STORE_NUM` = `SP`.`STORE_NUM`;

-- trigger
DELIMITER //

CREATE TRIGGER `AFTER_PAYMENT_INSERT`
AFTER INSERT ON `BB_PAYMENT`
FOR EACH ROW
BEGIN
    INSERT INTO `BB_POINT` (`MEMBER_NUM`, `POINT_PLUS`, `POINT_CONTENT`)
    VALUES (
        NEW.`MEMBER_NUM`,
        NEW.`PAYMENT_AMOUNT`,
        CONCAT('+', NEW.`PAYMENT_AMOUNT`, ' point 충전')
    );
END;

CREATE TRIGGER `AFTER_ORDER_DETAIL_INSERT`
AFTER INSERT ON `BB_ORDER_DETAIL`
FOR EACH ROW
BEGIN
    DECLARE `MEMBER_NUM` INT;
    DECLARE `TOTAL_PRICE` INT;

    SELECT `O`.`MEMBER_NUM` INTO `MEMBER_NUM`
    FROM `BB_ORDER` `O`
    WHERE `O`.`ORDER_NUM` = NEW.`ORDER_NUM`;

    IF `MEMBER_NUM` IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'MEMBER_NUM is NULL. Check the ORDER_NUM.';
    END IF;

    SELECT SUM(`P`.`PRODUCT_PRICE` * `D`.`ORDER_QUANTITY`) INTO `TOTAL_PRICE`
    FROM `BB_ORDER_DETAIL` `D`
    JOIN `BB_PRODUCT` `P` ON `D`.`PRODUCT_NUM` = `P`.`PRODUCT_NUM`
    WHERE `D`.`ORDER_NUM` = NEW.`ORDER_NUM`;

    INSERT INTO `BB_POINT` (`MEMBER_NUM`, `POINT_MINUS`, `POINT_CONTENT`)
    VALUES(
        `MEMBER_NUM`,
        `TOTAL_PRICE`,
        CONCAT('-', `TOTAL_PRICE`, ' 상품 구매')
    );
END;

CREATE TRIGGER `AFTER_ORDER_UPDATE`
AFTER UPDATE ON `BB_ORDER`
FOR EACH ROW
BEGIN
    DECLARE `TOTAL_PRICE` INT;

    IF NEW.`ADMIN_CHECKED` = 'C' AND OLD.`ADMIN_CHECKED` != 'C' THEN
        SELECT SUM(`P`.`PRODUCT_PRICE` * `D`.`ORDER_QUANTITY`) INTO `TOTAL_PRICE`
        FROM `BB_ORDER_DETAIL` `D`
        JOIN `BB_PRODUCT` `P` ON `D`.`PRODUCT_NUM` = `P`.`PRODUCT_NUM`
        WHERE `D`.`ORDER_NUM` = NEW.`ORDER_NUM`;

        INSERT INTO `BB_POINT` (`MEMBER_NUM`, `POINT_PLUS`, `POINT_CONTENT`)
        VALUES (
            NEW.`MEMBER_NUM`,
            `TOTAL_PRICE`,
            CONCAT('+', `TOTAL_PRICE`, ' 상품 취소')
        );
    END IF;
END;

//

DELIMITER ;
